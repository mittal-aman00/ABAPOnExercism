CLASS zcl_itab_aggregation DEFINITION
  PUBLIC
  FINAL
  CREATE PUBLIC .

  PUBLIC SECTION.
    TYPES group TYPE c LENGTH 1.
    TYPES: BEGIN OF initial_numbers_type,
             group  TYPE group,
             number TYPE i,
           END OF initial_numbers_type,
           initial_numbers TYPE STANDARD TABLE OF initial_numbers_type WITH EMPTY KEY.

    TYPES: BEGIN OF aggregated_data_type,
             group   TYPE group,
             count   TYPE i,
             sum     TYPE i,
             min     TYPE i,
             max     TYPE i,
             average TYPE f,
           END OF aggregated_data_type,
           aggregated_data TYPE STANDARD TABLE OF aggregated_data_type WITH EMPTY KEY.

    METHODS perform_aggregation
      IMPORTING
        initial_numbers        TYPE initial_numbers
      RETURNING
        VALUE(aggregated_data) TYPE aggregated_data.
  PROTECTED SECTION.
  PRIVATE SECTION.

ENDCLASS.



CLASS zcl_itab_aggregation IMPLEMENTATION.
  METHOD perform_aggregation.
    DATA : ls_aggregated_data type aggregated_data_type.

    LOOP AT initial_numbers INTO DATA(ls) GROUP BY ( group = ls-group ) ASCENDING Assigning FIELD-SYMBOL(<lfs_group>).
      Clear ls_aggregated_data.
      LOOP AT GROUP <lfs_group> ASSIGNING FIELD-SYMBOL(<lfs_grp_line>).
        ls_aggregated_data-group = <lfs_grp_line>-group.
        ls_aggregated_data-count = ( ls_aggregated_data-count + 1 ).
        ls_aggregated_data-sum   = ( ls_aggregated_data-sum + <lfs_grp_line>-number ).
        ls_aggregated_data-min   = COND #( WHEN ls_aggregated_data-min IS INITIAL
                                           THEN <lfs_grp_line>-number
                                           WHEN ls_aggregated_data-min < <lfs_grp_line>-number
                                           THEN ls_aggregated_data-min
                                           WHEN <lfs_grp_line>-number < ls_aggregated_data-min
                                           THEN <lfs_grp_line>-number
                                           ELSE ls_aggregated_data-min ) .
        ls_aggregated_data-max   = COND #( WHEN ls_aggregated_data-max IS INITIAL
                                           THEN <lfs_grp_line>-number
                                           WHEN ls_aggregated_data-max < <lfs_grp_line>-number
                                           THEN <lfs_grp_line>-number
                                           WHEN <lfs_grp_line>-number < ls_aggregated_data-max
                                           THEN ls_aggregated_data-max
                                           ELSE ls_aggregated_data-max ) .
        ls_aggregated_data-average = ( ls_aggregated_data-sum / ls_aggregated_data-count ).


      ENDLOOP.
      aggregated_data = VALUE #( BASE aggregated_data ( ls_aggregated_data ) ).
    ENDLOOP.

  ENDMETHOD.

ENDCLASS.
